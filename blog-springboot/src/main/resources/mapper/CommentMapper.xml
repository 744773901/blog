<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjj.blog.mapper.CommentMapper">

    <select id="listAdminComment" resultType="com.zjj.blog.vo.AdminCommentVO">
        SELECT c.id,
        u1.avatar,
        u1.nickname,
        u2.nickname AS reply_nickName,
        a.article_title,
        c.comment_content,
        c.type,
        c.is_review,
        c.create_time
        FROM tb_comment c
        LEFT JOIN tb_article a ON a.id = c.topic_id
        LEFT JOIN tb_user_info u1 ON u1.id = c.user_id
        LEFT JOIN tb_user_info u2 ON u2.id = c.reply_user_id
        <where>
            <if test="condition.type != null">
                c.type = #{condition.type}
            </if>
            <if test="condition.isReview != null">
                AND c.is_review = #{condition.isReview}
            </if>
            <if test="condition.keyword != null">
                AND u1.nickname LIKE CONCAT('%', #{condition.keyword}, '%')
            </if>
        </where>
        ORDER BY c.id DESC
        LIMIT #{current}, #{size}
    </select>
    <select id="countAdminComment" resultType="java.lang.Integer">
        select count(1)
        from tb_comment c
        left join tb_user_info u on u.id = c.user_id
        <where>
            <if test="condition.type != null">
                c.type = #{condition.type}
            </if>
            <if test="condition.keyword != null">
                and u.nickname like concat('%', #{condition.keyword}, '%')
            </if>
            <if test="condition.isReview != null">
                and c.is_review = #{condition.isReview}
            </if>
        </where>
    </select>
    <select id="listComments" resultType="com.zjj.blog.dto.CommentDTO">
        SELECT
        u.nickname,
        u.avatar,
        u.web_site,
        c.user_id,
        c.id,
        c.comment_content,
        c.create_time
        FROM
        tb_comment c
        JOIN tb_user_info u ON c.user_id = u.id
        <where>
            <if test="comment.topicId != null">
                topic_id = #{comment.topicId}
            </if>
            AND type = #{comment.type}
            AND c.is_review = 1
            AND parent_id IS NULL
        </where>
        ORDER BY
        c.id DESC
        LIMIT #{current},#{size}
    </select>
    <select id="listReplies" resultType="com.zjj.blog.dto.ReplyDTO">
        SELECT
        *
        FROM
        (
        SELECT
        c.user_id,
        u.nickname,
        u.avatar,
        u.web_site,
        c.reply_user_id,
        r.nickname AS reply_nickname,
        r.web_site AS reply_web_site,
        c.id,
        c.parent_id,
        c.comment_content,
        c.create_time,
        row_number() over ( PARTITION BY parent_id ORDER BY c.create_time) row_num
        FROM
        tb_comment c
        JOIN tb_user_info u ON c.user_id = u.id
        JOIN tb_user_info r ON c.reply_user_id = r.id
        WHERE
        c.is_review = 1
        AND
        parent_id IN
        (
        <foreach collection="commentIdList" item="commentId" separator=",">
            #{commentId}
        </foreach>
        )
        ) t
        WHERE
        4 > row_num
    </select>
    <select id="listReplyCountByCommentId" resultType="com.zjj.blog.dto.ReplyCountDTO">
        SELECT
        parent_id as comment_id,
        count(1) AS reply_count
        FROM
        tb_comment
        WHERE
        is_review = 1
        AND
        parent_id IN
        <foreach open="(" collection="commentIdList" item="commentId" separator="," close=")">
            #{commentId}
        </foreach>
        GROUP BY
        parent_id
    </select>
    <select id="listRepliesById" resultType="com.zjj.blog.dto.ReplyDTO">
        SELECT c.user_id,
               u.nickname,
               u.avatar,
               u.web_site,
               c.reply_user_id,
               r.nickname as reply_nickname,
               r.web_site as reply_web_site,
               c.id,
               c.parent_id,
               c.comment_content,
               c.create_time
        FROM tb_comment c
                 JOIN tb_user_info u ON c.user_id = u.id
                 JOIN tb_user_info r ON c.reply_user_id = r.id
        WHERE c.is_review = 1
          AND parent_id = #{id}
        ORDER BY c.id
        LIMIT #{current}, #{size}
    </select>
    <select id="listCommentCountByTopicIds" resultType="com.zjj.blog.dto.CommentCountDTO">
        SELECT
        topic_id as id,
        COUNT( 1 ) AS comment_count
        FROM
        tb_comment
        WHERE
        topic_id IN
        <foreach open="(" collection="topicIdList" item="topicId" separator="," close=")">
            #{topicId}
        </foreach>
        AND
        parent_id IS NULL
        GROUP BY
        topic_id
    </select>
</mapper>